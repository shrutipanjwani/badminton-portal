[{"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\LoginForm.js":"4","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\RegistrationForm.js":"5","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Logout.js":"6","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Admin.js":"7","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\ResetPassword.js":"8","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Calendar\\Calendar.js":"9","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Profile\\Profile.js":"10","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Wallet\\Wallet.js":"11","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\actions\\alert.js":"12","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\actions\\types.js":"13","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\store.js":"14","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\reducers\\index.js":"15","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\reducers\\alert.js":"16","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Alert.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":1407,"mtime":1607160733982,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2323,"mtime":1607166727314,"results":"22","hashOfConfig":"19"},{"size":21279,"mtime":1607174311641,"results":"23","hashOfConfig":"19"},{"size":375,"mtime":1606914962112,"results":"24","hashOfConfig":"19"},{"size":595,"mtime":1607078030212,"results":"25","hashOfConfig":"19"},{"size":3316,"mtime":1607156102538,"results":"26","hashOfConfig":"19"},{"size":8731,"mtime":1607156651940,"results":"27","hashOfConfig":"19"},{"size":1235,"mtime":1607081179012,"results":"28","hashOfConfig":"19"},{"size":2088,"mtime":1607108546231,"results":"29","hashOfConfig":"19"},{"size":341,"mtime":1607154252434,"results":"30","hashOfConfig":"19"},{"size":82,"mtime":1607150380402,"results":"31","hashOfConfig":"19"},{"size":390,"mtime":1607152001908,"results":"32","hashOfConfig":"19"},{"size":118,"mtime":1607150245076,"results":"33","hashOfConfig":"19"},{"size":370,"mtime":1607150221962,"results":"34","hashOfConfig":"19"},{"size":486,"mtime":1607152157211,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"696fwr",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\index.js",[],["77","78"],"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\LoginForm.js",["79"],"import React, { Fragment } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class Login extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    const token = localStorage.getItem(\"token\")\r\n\r\n    let loggedIn = true \r\n      if( token == null){\r\n        loggedIn = false\r\n      }\r\n\r\n      this.state = {\r\n        email: '',\r\n        password: '',\r\n        loggedIn\r\n      }\r\n\r\n    this.onChange = this.onChange.bind(this)\r\n    this.submitForm = this.submitForm.bind(this)\r\n  }\r\n\r\n  onChange(e){\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  submitForm(e){\r\n    e.preventDefault()\r\n    const { email, password } = this.state\r\n\r\n    if(email === \"sp@gmail.com\" && password === \"123456\"){\r\n      localStorage.setItem(\"token\", \"tgvygbipiyc335se\")\r\n      this.setState({\r\n        loggedIn: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    if(this.state.loggedIn){\r\n      return <Redirect to=\"/admin\" />\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <section className='container'>\r\n          <h1 className=\"large text-primary\">Sign In</h1>\r\n          <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\r\n          <form className=\"form\" onSubmit={this.submitForm}>\r\n            <div className=\"form-group\">\r\n              <input \r\n                type=\"email\" \r\n                placeholder=\"Email Address\" \r\n                name=\"email\" \r\n                value={this.state.email}\r\n                onChange={this.onChange}\r\n                required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                minLength=\"6\"\r\n                value={this.state.onChange}\r\n                onChange={this.onChange} \r\n                required\r\n              />\r\n            </div>\r\n            <Link to=\"/resetpassword\">Forgot Password?</Link>\r\n            <br />\r\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n          </form>\r\n          <p className=\"my-1\">\r\n            Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n          </p>\r\n        </section>\r\n    </Fragment>\r\n    );\r\n  }\r\n}","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\RegistrationForm.js",["80","81"],"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Logout.js",[],"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Admin.js",["82"],"import React, { Component } from 'react'\r\nimport { Link, Redirect} from 'react-router-dom'\r\nimport CalendarPage from './Calendar/Calendar'\r\n\r\nexport default class Admin extends Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\")\r\n\r\n    let loggedIn = true \r\n\t    if( token == null){\r\n\t    \tloggedIn = false\r\n\t    }\r\n\r\n\t    this.state={\r\n\t    \tloggedIn\r\n\t    }\r\n    }\r\n\trender() {\r\n\t\tif(this.state.loggedIn === false){\r\n\t\t\treturn <Redirect to=\"/signin\" />\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<div className=\"admin\">\r\n\t\t\t\t<CalendarPage />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\ResetPassword.js",["83","84","85","86","87","88","89","90"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nconst ResetPassword = ({ setAlert }) => {\r\n  const [open, setOpen] = useState(false);\r\n \r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  const styles = {\r\n    center: {\r\n      textAlign: 'center',\r\n    },\r\n  }\r\n\r\n  const [formData, setFormData] = useState({\r\n    oldpassword: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const { oldpassword, password, confirmPassword } = formData;\r\n\r\n  const onChange = e => \r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (password != confirmPassword) {\r\n      setAlert('Password do not match', 'danger');\r\n    } else {\r\n      console.log('SUCCESS');\r\n    }\r\n  };\r\n  \r\n    return (\r\n      <Fragment>\r\n        <h1 className=\"large text-primary\">Reset Password</h1>\r\n        <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Old Password\"\r\n              name=\"oldpassword\"\r\n              minLength=\"6\"\r\n              value={oldpassword}\r\n              onChange={e => onChange(e)} \r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              minLength=\"6\"\r\n              value={password}\r\n              onChange={e => onChange(e)} \r\n              required\r\n          />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              name=\"confirmPassword\"\r\n              minLength=\"6\"\r\n              value={confirmPassword}\r\n              onChange={e => onChange(e)} \r\n              required\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Reset Password\" onClick={handleClickOpen}/>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            >\r\n            <DialogContent id=\"form-dialog-title\">\r\n              <DialogContentText style={styles.center}>\r\n                Your Password has been changed successfully\r\n                <br />\r\n                <br />\r\n                <Button type='submit'\r\n                variant=\"outlined\" color=\"primary\" onClick={handleClose}>\r\n                  OK\r\n                </Button>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </form>\r\n    </Fragment>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Calendar\\Calendar.js",["91","92","93","94","95","96"],"import React from 'react';\r\nimport { Link, Redirect} from 'react-router-dom'\r\nimport './Calendar.css';\r\nimport * as mobiscroll from '@mobiscroll/react';\r\nimport '@mobiscroll/react/dist/css/mobiscroll.min.css';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CalendarPage() {\r\n\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose} component={Link} to=\"/profile\">Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>\r\n        <Link to=\"/logout\"> Logout </Link>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\" component={Link} to=\"/wallet\">\r\n          <Badge color=\"secondary\">\r\n            <AccountBalanceWalletIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Wallet</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const [myEvents, setEvents] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        mobiscroll.util.http.getJson('https://trial.mobiscroll.com/custom-events/', (events) => {\r\n            setEvents(events);\r\n        }, 'jsonp');\r\n    }, []);\r\n    \r\n    const view = React.useMemo(() => {\r\n        return {\r\n            calendar: { popover: true }\r\n        };\r\n    }, []);\r\n    \r\n    const getParticipant = (id) => {\r\n        switch (id) {\r\n            case 1:\r\n                return {\r\n                    img: 'https://img.mobiscroll.com/demos/m1.png',\r\n                    name: 'Barry L.'\r\n                };\r\n            case 2:\r\n                return {\r\n                    img: 'https://img.mobiscroll.com/demos/f1.png',\r\n                    name: 'Hortense T.'\r\n                };\r\n            case 3:\r\n                return {\r\n                    img: 'https://img.mobiscroll.com/demos/m2.png',\r\n                    name: 'Carl H.'\r\n                };\r\n        }\r\n    };\r\n    \r\n    const add = (ev, data) => {\r\n        ev.stopPropagation();\r\n        mobiscroll.toast({\r\n            message: getParticipant(data.participant).name + '\\'s event clicked'\r\n        });\r\n    };\r\n    \r\n    const renderEventContent = React.useCallback((data) => {\r\n        return \r\n        <React.Fragment>\r\n            <div>{data.title}</div>\r\n                <div className=\"md-custom-event-cont\">\r\n                    <img className=\"md-custom-event-img\" src={getParticipant(data.original.participant).img} />\r\n                    <div className=\"mbsc-custom-event-name\">{getParticipant(data.original.participant).name}</div>\r\n                    <mobiscroll.Button className=\"md-custom-event-btn\" color=\"secondary\" variant=\"outline\" onClick={(domEvent) => add(domEvent, data.original)}>Add participant</mobiscroll.Button>\r\n                </div>\r\n        </React.Fragment>\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.grow}>\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              {/*<IconButton\r\n                edge=\"start\"\r\n                className={classes.menuButton}\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n              >\r\n              </IconButton>*/}\r\n              <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                Badminton Court\r\n              </Typography>\r\n              \r\n              <div className={classes.grow} />\r\n              <div className={classes.sectionDesktop}>\r\n                <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\" component={Link} to=\"/wallet\">\r\n                  <Badge color=\"secondary\">\r\n                    <AccountBalanceWalletIcon/>\r\n                  </Badge>\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </div>\r\n              <div className={classes.sectionMobile}>\r\n                <IconButton\r\n                  aria-label=\"show more\"\r\n                  aria-controls={mobileMenuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMobileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n          {renderMobileMenu}\r\n          {renderMenu}\r\n        </div>\r\n        <div>\r\n            <mobiscroll.Eventcalendar\r\n              theme=\"ios\" \r\n              themeVariant=\"light\" \r\n              dragToCreate={true} \r\n              dragToMove={true} \r\n              dragToResize={true}\r\n              renderEventContent={renderEventContent}\r\n              data={myEvents}\r\n              view={view}\r\n           />\r\n       </div>\r\n      </>\r\n    ); \r\n}\r\n\r\nexport default CalendarPage;","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Profile\\Profile.js",["97"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction Profile() {\r\n\tconst classes = useStyles();\r\n\tlet history = useHistory()\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={classes.root}>\r\n\t\t      <AppBar position=\"static\">\r\n\t\t        <Toolbar>\r\n\t\t          <IconButton edge=\"start\" className={classes.menuButton}\r\n\t\t          color=\"inherit\" onClick={() => history.goBack()}>\r\n\t\t            <ArrowBackIcon />\r\n\t\t          </IconButton>\r\n\t\t          <Typography variant=\"h6\" className={classes.title}>\r\n\t\t            My Profile\r\n\t\t          </Typography>\r\n\t\t        </Toolbar>\r\n\t\t      </AppBar>\r\n\t\t    </div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Wallet\\Wallet.js",[],"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\actions\\alert.js",[],"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\actions\\types.js",[],"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\store.js",[],"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\reducers\\index.js",[],"C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\reducers\\alert.js",["98"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n\tconst { type, payload } = action;\r\n\t\r\n\tswitch(type) {\r\n\t\tcase SET_ALERT: \r\n\t\t\treturn [...state, payload];\r\n\t\tcase REMOVE_ALERT: \r\n\t\t\treturn state.filter(alert => alert.id !== payload);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","C:\\Users\\DELL\\Desktop\\Badminton Portal\\badminton-portal\\src\\components\\Alert.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":13},{"ruleId":"103","severity":1,"message":"107","line":3,"column":13,"nodeType":"105","messageId":"106","endLine":3,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":100,"column":18,"nodeType":"110","messageId":"111","endLine":100,"endColumn":20},{"ruleId":"103","severity":1,"message":"112","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"112","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"113","line":2,"column":16,"nodeType":"105","messageId":"106","endLine":2,"endColumn":24},{"ruleId":"103","severity":1,"message":"104","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":13},{"ruleId":"103","severity":1,"message":"114","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":14},{"ruleId":"103","severity":1,"message":"115","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":18},{"ruleId":"103","severity":1,"message":"116","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":20},{"ruleId":"103","severity":1,"message":"117","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":21},{"ruleId":"108","severity":1,"message":"109","line":43,"column":18,"nodeType":"110","messageId":"111","endLine":43,"endColumn":20},{"ruleId":"103","severity":1,"message":"113","line":2,"column":16,"nodeType":"105","messageId":"106","endLine":2,"endColumn":24},{"ruleId":"103","severity":1,"message":"118","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":175,"column":9,"nodeType":"121","messageId":"122","endLine":191,"endColumn":10},{"ruleId":"123","severity":1,"message":"124","line":201,"column":32,"nodeType":"125","endLine":201,"endColumn":49},{"ruleId":"126","severity":1,"message":"127","line":203,"column":9,"nodeType":"128","messageId":"129","endLine":210,"endColumn":26},{"ruleId":"130","severity":1,"message":"131","line":206,"column":21,"nodeType":"132","endLine":206,"endColumn":112},{"ruleId":"103","severity":1,"message":"133","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":5,"column":1,"nodeType":"136","endLine":16,"endColumn":2},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Yup' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Link' is defined but never used.","'Redirect' is defined but never used.","'Avatar' is defined but never used.","'Typography' is defined but never used.","'LockOpenIcon' is defined but never used.","'DialogActions' is defined but never used.","'InputBase' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]